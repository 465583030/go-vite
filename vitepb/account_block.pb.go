// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account_block.proto

package vitepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccountBlock struct {
	Account              []byte            `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	To                   []byte            `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	PrevHash             []byte            `protobuf:"bytes,3,opt,name=prevHash,proto3" json:"prevHash,omitempty"`
	FromHash             []byte            `protobuf:"bytes,4,opt,name=fromHash,proto3" json:"fromHash,omitempty"`
	BlockNum             []byte            `protobuf:"bytes,5,opt,name=blockNum,proto3" json:"blockNum,omitempty"`
	Balance              map[uint32][]byte `protobuf:"bytes,6,rep,name=balance,proto3" json:"balance,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Signature            []byte            `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AccountBlock) Reset()         { *m = AccountBlock{} }
func (m *AccountBlock) String() string { return proto.CompactTextString(m) }
func (*AccountBlock) ProtoMessage()    {}
func (*AccountBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_block_64f8629d5960f9cb, []int{0}
}
func (m *AccountBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountBlock.Unmarshal(m, b)
}
func (m *AccountBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountBlock.Marshal(b, m, deterministic)
}
func (dst *AccountBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountBlock.Merge(dst, src)
}
func (m *AccountBlock) XXX_Size() int {
	return xxx_messageInfo_AccountBlock.Size(m)
}
func (m *AccountBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountBlock.DiscardUnknown(m)
}

var xxx_messageInfo_AccountBlock proto.InternalMessageInfo

func (m *AccountBlock) GetAccount() []byte {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *AccountBlock) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *AccountBlock) GetPrevHash() []byte {
	if m != nil {
		return m.PrevHash
	}
	return nil
}

func (m *AccountBlock) GetFromHash() []byte {
	if m != nil {
		return m.FromHash
	}
	return nil
}

func (m *AccountBlock) GetBlockNum() []byte {
	if m != nil {
		return m.BlockNum
	}
	return nil
}

func (m *AccountBlock) GetBalance() map[uint32][]byte {
	if m != nil {
		return m.Balance
	}
	return nil
}

func (m *AccountBlock) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*AccountBlock)(nil), "vitepb.AccountBlock")
	proto.RegisterMapType((map[uint32][]byte)(nil), "vitepb.AccountBlock.BalanceEntry")
}

func init() { proto.RegisterFile("account_block.proto", fileDescriptor_account_block_64f8629d5960f9cb) }

var fileDescriptor_account_block_64f8629d5960f9cb = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x4c, 0x4e, 0xce,
	0x2f, 0xcd, 0x2b, 0x89, 0x4f, 0xca, 0xc9, 0x4f, 0xce, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x2b, 0xcb, 0x2c, 0x49, 0x2d, 0x48, 0x52, 0x5a, 0xcc, 0xc4, 0xc5, 0xe3, 0x08, 0x91, 0x77,
	0x02, 0x49, 0x0b, 0x49, 0x70, 0xb1, 0x43, 0xd5, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x04, 0xc1,
	0xb8, 0x42, 0x7c, 0x5c, 0x4c, 0x25, 0xf9, 0x12, 0x4c, 0x60, 0x41, 0xa6, 0x92, 0x7c, 0x21, 0x29,
	0x2e, 0x8e, 0x82, 0xa2, 0xd4, 0x32, 0x8f, 0xc4, 0xe2, 0x0c, 0x09, 0x66, 0xb0, 0x28, 0x9c, 0x0f,
	0x92, 0x4b, 0x2b, 0xca, 0xcf, 0x05, 0xcb, 0xb1, 0x40, 0xe4, 0x60, 0x7c, 0x90, 0x1c, 0xd8, 0x25,
	0x7e, 0xa5, 0xb9, 0x12, 0xac, 0x10, 0x39, 0x18, 0x5f, 0xc8, 0x9a, 0x8b, 0x3d, 0x29, 0x31, 0x27,
	0x31, 0x2f, 0x39, 0x55, 0x82, 0x4d, 0x81, 0x59, 0x83, 0xdb, 0x48, 0x51, 0x0f, 0xe2, 0x50, 0x3d,
	0x64, 0x47, 0xea, 0x39, 0x41, 0xd4, 0xb8, 0xe6, 0x95, 0x14, 0x55, 0x06, 0xc1, 0x74, 0x08, 0xc9,
	0x70, 0x71, 0x16, 0x67, 0xa6, 0xe7, 0x25, 0x96, 0x94, 0x16, 0xa5, 0x4a, 0xb0, 0x83, 0x4d, 0x46,
	0x08, 0x48, 0x59, 0x71, 0xf1, 0x20, 0x6b, 0x13, 0x12, 0xe0, 0x62, 0xce, 0x4e, 0xad, 0x04, 0x7b,
	0x92, 0x37, 0x08, 0xc4, 0x14, 0x12, 0xe1, 0x62, 0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x85, 0xfa, 0x11,
	0xc2, 0xb1, 0x62, 0xb2, 0x60, 0x4c, 0x62, 0x03, 0x07, 0x9a, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff,
	0x29, 0x56, 0xe7, 0xf7, 0x4b, 0x01, 0x00, 0x00,
}
